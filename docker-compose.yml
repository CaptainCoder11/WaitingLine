version: "3"
services:
  frontend:
    container_name: WaitingLine
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    restart: always

  backend:
    build: ./backend
    image: backend
    ports:
      - 3333:3333
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - DB_SERVER=0.0.0.0
    links:
     - db  
    depends_on:
     - flyway
  flyway:
    image: boxfuse/flyway:5-alpine
    command: -url=jdbc:postgresql://postgres:5432/WaitingLine -schemas=public -user=postgres -password=postgres
    volumes:
      - ./migration:/flyway/sql
    depends_on:
      db:
        condition: service_healthy   

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "postgres"]
      interval: 5s
      timeout: 1s
      retries: 2  

  pgadmin:
      container_name: pgadmin_container
      image: dpage/pgadmin4

      environment:
        PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
        PGADMIN_DEFAULT_PASSWORD: admin

      depends_on:
        - db  

      volumes:
        - pgadmin:/var/lib/pgadmin

      ports:
        - "5050:80"
      networks:
        - postgres
      restart: unless-stopped

networks:
    postgres:
      driver: bridge

volumes:
      postgres:
      pgadmin:
    
